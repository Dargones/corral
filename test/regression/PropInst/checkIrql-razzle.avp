GlobalDeclarations
{
  var irql_current: int;
}

ProcedureRule
{
	procedure {:#ReplaceImplementation} {:#MatchRefs} strnlen({:pointer} {:ref "Mem_T.VOID"} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
}
-->
{
	// TODO
	assert irql_current <= 1;
	return;
}


ProcedureRule
{
	procedure {:#ReplaceImplementation} {:#MatchRefs} strnlen({:pointer} {:ref "Mem_T.PINT"} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
}
-->
{
	// TODO
	assert irql_current <= 2;
	return;
}